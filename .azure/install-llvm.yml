# This template installs LLVM (if doesn't exist in the systems)

steps:
  - bash: |
      set -ex
      if [ -x "`command -v llvm-config`" ]; then
        echo `command -v llvm-config` `llvm-config --version` installed
      else
        curl -O https://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-apple-darwin.tar.xz
        tar xf clang+llvm-8.0.0-x86_64-apple-darwin.tar.xz
        export LLVM_SYS_80_PREFIX="`pwd`/clang+llvm-8.0.0-x86_64-apple-darwin/"
        echo "##vso[task.prependpath]$LLVM_SYS_80_PREFIX/bin"
      fi
    displayName: "Install LLVM (macOS)"
    condition: eq(variables['Agent.OS'], 'Darwin')

  - bash: |
      set -ex
      if [ -x "`command -v llvm-config`" ]; then
        echo `command -v llvm-config` `llvm-config --version` installed
      else
        curl -O https://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz
        tar xf clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz
        export LLVM_SYS_80_PREFIX="`pwd`/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04/"
        echo "##vso[task.prependpath]$LLVM_SYS_80_PREFIX/bin"
      fi
    displayName: "Install LLVM (Linux)"
    condition: eq(variables['Agent.OS'], 'Linux')

  - bash: |
      set -ex
      if [ -x "`command -v llvm-config`" ]; then
        echo `command -v cmake` `llvm-config --version` installed
      else
        curl -O https://github.com/wasmerio/windows-llvm-build/releases/download/v8.0.0/llvm-8.0.0-install.zip
        unzip llvm-8.0.0-install.zip
        export LLVM_SYS_80_PREFIX="`pwd`/llvm-8.0.0-install/"
        echo "##vso[task.prependpath]$LLVM_SYS_80_PREFIX/bin"
        # chocolatey install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
      fi
    displayName: "Install LLVM (Windows)"
    condition: eq(variables['Agent.OS'], 'Windows_NT')

  - bash: |
      set -ex
      llvm-config --version
    displayName: LLVM version
