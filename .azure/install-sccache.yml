# This template installs sccache (Shared Compilation Cache)
# More info: https://github.com/mozilla/sccache

steps:

  - bash: |
      set -e
      curl -Lfo sccache.tar.gz https://github.com/mozilla/sccache/releases/download/0.2.10/sccache-0.2.10-x86_64-apple-darwin.tar.gz
      tar -xzf sccache.tar.gz
      mv sccache-* sccache
      sccache=`pwd`/sccache/sccache
      echo "##vso[task.setvariable variable=SCCACHE_BIN]$sccache"
    displayName: Install sccache (macOS)
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))

  - bash: |
      set -e
      curl -Lfo sccache.tar.gz https://github.com/mozilla/sccache/releases/download/0.2.10/sccache-0.2.10-x86_64-unknown-linux-musl.tar.gz
      tar -xzf sccache.tar.gz
      mv sccache-* sccache
      sccache=`pwd`/sccache/sccache
      echo "##vso[task.setvariable variable=SCCACHE_BIN]$sccache"
    displayName: Install sccache (Linux)
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

  - bash: |
      curl -Lfo sccache.tar.gz https://github.com/mozilla/sccache/releases/download/0.2.10/sccache-0.2.10-x86_64-pc-windows-msvc.tar.gz
      tar -xzf sccache.tar.gz
      mv sccache-* sccache
      sccache=`pwd`/sccache/sccache.exe
      echo "##vso[task.setvariable variable=SCCACHE_BIN]$sccache"
    displayName: Install sccache (Windows)
    condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

  - bash: |
      set -ex
      $SCCACHE_BIN -V
    displayName: sccache version

  - bash: |
      # mkdir -p $SCCACHE_DIR
      set -ex
      env
      echo "##vso[task.setvariable variable=RUSTC_WRAPPER]$SCCACHE_BIN"
      SCCACHE_ERROR_LOG=`pwd`/sccache.log RUST_LOG=debug $SCCACHE_BIN --start-server
      $SCCACHE_BIN -s
      cat sccache.log
    displayName: Start sccache  
    env:
      SCCACHE_AZURE_CONNECTION_STRING: $(SCCACHE_AZURE_CONNECTION_STRING)
      SCCACHE_AZURE_BLOB_CONTAINER: $(SCCACHE_AZURE_BLOB_CONTAINER)
