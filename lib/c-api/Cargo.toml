[package]
name = "wasmer-c-api"
version = "3.0.0-rc.2"
description = "Wasmer C API library"
categories = ["wasm", "api-bindings"]
keywords = ["wasm", "webassembly", "runtime"]
authors = ["Wasmer Engineering Team <engineering@wasmer.io>"]
repository = "https://github.com/wasmerio/wasmer"
documentation = "https://wasmerio.github.io/wasmer/c-api/"
license = "MIT"
readme = "README.md"
edition = "2018"

[lib]
# The library name is `wasmer` so that we generate dylib like
# `libwasmer.so`, `libwasmer.dylib`, `wasmer.dll` etc. But it creates
# a conflict with the existing `wasmer` crate, see below.
name = "wasmer" # ##lib.name##
                # ^ DO NOT REMOVE, it's used the `Makefile`, see `build-docs-capi`.
crate-type = ["staticlib", "cdylib"] #"cdylib", "rlib", "staticlib"]

[dependencies]
# We rename `wasmer` to `wasmer-api` to avoid the conflict with this
# library name (see `[lib]`).
wasmer-api = { version = "=3.0.0-rc.2", path = "../api", default-features = false, features = ["sys"], package = "wasmer" }
wasmer-compiler-cranelift = { version = "=3.0.0-rc.2", path = "../compiler-cranelift", optional = true }
wasmer-compiler-singlepass = { version = "=3.0.0-rc.2", path = "../compiler-singlepass", optional = true }
wasmer-compiler-llvm = { version = "=3.0.0-rc.2", path = "../compiler-llvm", optional = true }
wasmer-emscripten = { version = "=3.0.0-rc.2", path = "../emscripten", optional = true }
wasmer-compiler = { version = "=3.0.0-rc.2", path = "../compiler" }
wasmer-middlewares = { version = "=3.0.0-rc.2", path = "../middlewares", optional = true }
wasmer-wasi = { version = "=3.0.0-rc.2", path = "../wasi", default-features = false, features = ["host-fs", "sys"], optional = true }
wasmer-types = { version = "=3.0.0-rc.2", path = "../types" }
wasmer-vfs = { version = "=3.0.0-rc.2", path = "../vfs", optional = true, default-features = false, features = ["static-fs"] }
#webc = { version = "3.0.1", optional = true }
# Something is still wrong with the webc version published on crates.io when attempting to
# load a .webc from the registry (e.g. sharrattj/coreutils)
# 780.main.js:652 panicked at 'range end index 76 out of range for slice of length 44', /home/john/.cargo/registry/src/github.com-1ecc6299db9ec823/webc-3.0.1/src/lib.rs:925:30
webc = { path = "../../../pirita/crates/webc", optional = true }
enumset = "1.0.2"
cfg-if = "1.0"
lazy_static = "1.4"
libc = { version = "^0.2", default-features = false }
thiserror = "1"
typetag = { version = "0.1", optional = true }
paste = "1.0"

[dev-dependencies]
field-offset = "0.3.3"

[target.'cfg(target_os = "windows")'.dev-dependencies]
wasmer-inline-c = "0.1.1"

[target.'cfg(not(target_os = "windows"))'.dev-dependencies]
inline-c = "0.1.7"

[features]
default = [
    "wat",
    "cranelift",
    "compiler",
    "wasi",
    "middlewares",
]
wat = ["wasmer-api/wat"]
wasi = ["wasmer-wasi"]
middlewares = [
    "compiler",
    "wasmer-middlewares",
]
compiler = [
    "wasmer-api/compiler",
    "wasmer-compiler/translator",
    "wasmer-compiler/compiler",
]
compiler-headless = [
    "wasmer-artifact-load",
    "static-artifact-load",
    "wasmer-api/compiler",
    "wasmer-compiler/translator",
    "wasmer-compiler/compiler",
]
singlepass = [
    "wasmer-compiler-singlepass",
    "compiler",
]
cranelift = [
    "wasmer-compiler-cranelift",
    "compiler",
]
llvm = [
    "wasmer-compiler-llvm",
    "compiler",
]
wasmer-artifact-load = ["wasmer-compiler/wasmer-artifact-load"]
wasmer-artifact-create = ["wasmer-compiler/wasmer-artifact-create"]
static-artifact-load = ["wasmer-compiler/static-artifact-load"]
static-artifact-create = ["wasmer-compiler/static-artifact-create"]
webc_runner = ["wasmer-wasi/webc_runner", "wasmer-vfs", "webc"]
# Deprecated features.
jit = ["compiler"]

# TODO: Port this feature.
#emscripten = ["wasmer-emscripten"]

[build-dependencies]
cbindgen = "0.24"
