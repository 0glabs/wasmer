[package]
name = "wasmer-c-api"
version = "0.16.2"
description = "Wasmer C API library"
documentation = "https://wasmerio.github.io/wasmer/c-api/"
license = "MIT"
authors = ["The Wasmer Engineering Team <engineering@wasmer.io>"]
repository = "https://github.com/wasmerio/wasmer"
keywords = ["wasm", "webassembly", "runtime"]
categories = ["wasm"]
edition = "2018"
readme = "README.md"

[lib]
crate-type = ["cdylib", "staticlib"]

[dependencies]
cfg-if = "0.1"
lazy_static = "1"
libc = { version = "0.2", default-features = false }
libffi = { version = "0.9" }
thiserror = "1"
paste = "0.1"
# for generating code in the same way thot the wasm-c-api does
# Commented out for now until we can find a solution to the exported function problem
# wasmer-wasm-c-api = { version = "0.16.2", path = "crates/wasm-c-api" }

[dependencies.wasmer]
default-features = false
features = ["compiler", "engine", "jit"]
path = "../api"
version = "0.16.2"

[dependencies.wasm-common]
default-features = false
path = "../wasm-common"
version = "0.16.2"

[dependencies.wasmer-wasi]
default-features = false
path = "../wasi"
version = "0.16.2"
optional = true

#[dependencies.wasmer-emscripten]
#path = "../emscripten"
#version = "0.16.2"
#optional = true

[features]
default = ["cranelift-backend", "wasi"]
singlepass = ["wasmer/singlepass"]
cranelift = ["wasmer/cranelift"]
llvm = ["wasmer/llvm"]
wasi = ["wasmer-wasi"]
#emscripten = ["wasmer-emscripten"]
# used to avoid generating standard Wasm C API types in our header files
ignore-wasm-c-api = []
# This is for compatibility for old usage
singlepass-backend = ["singlepass"]
cranelift-backend = ["cranelift"]
llvm-backend = ["llvm"]

[build-dependencies]
cbindgen = { git = "https://github.com/eqrion/cbindgen", version = "0.14" }