on: [push]

name: build

env:
  RUST_BACKTRACE: 1

jobs:
  lint:
    name: Code lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.42.0
          override: true
          components: rustfmt, clippy
      - run: make lint

  test:
    name: Test in ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            rust: nightly-2019-12-19
          - build: macos
            os: macos-latest
            rust: nightly-2019-12-19
          - build: windows
            os: windows-latest
            rust: nightly-2019-12-19
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - run: cargo test --release
      - name: Set up dependencies for Mac OS
        run: brew install autoconf
        if: matrix.os == 'macos-latest'
      - name: Build and Test C API
        run: |
          make capi
          make test-capi-cranelift
        if: matrix.os != 'windows-latest'
      - name: Build C API on Windows
        run: make capi
        if: matrix.os == 'windows-latest'
